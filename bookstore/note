事务的四大特性
    - 原子性：在我们的整个事务操作中，要么就事务中的所有的操作全部完成，要么就全部不完成。如果中间
    出现了BUG，那么就会回滚到事务的开始点(即事务开始前的状态)
    - 一致性：事务开始的前后，数据库的完整性约束都是没有被破坏的。
    - 隔离性：指如果有多个用户，对同一张表并发进行访问时，不同的用户会开启各自的事务，他们各自的事务
    不会被其他的事务所进行的操作干扰，多个事务之间是相互隔离的。
    - 持久性：当事务执行成功之后，该事务对数据库的更改操作是持久保存在数据库中的，并不会回滚。

事务的常用术语：
    - 开启事务
    - 事务结束(关闭事务)
    - 提交事务
    - 事务回滚

回滚
    - 事务回滚点
        当事务执行过程中发生了错误，事务会回滚到指定的保存点

GIL锁:
    当多个线程任务在执行时，未执行的线程任务，会等待正在执行的线程任务执行结束之后才会开始执行。避免多线程中存在的资源竞争问题

悲观锁：
    比较悲观，没有安全感，总是担心其他的用户会修改数据库中的某些数据，将数据加上锁，不让任何一个人对数据进行访问。

乐观锁：
    相对比较乐观，虽然上了锁，但是仍然可以通过某一个参数进行判断是否让用户能够修改表中数据。


常用端口号：
    8000，80，443，22，8888，888，465等。

pip包备份：pip freeze >> requirements.txt

[uwsgi]
master = true   # 表示允许服务在后台自运行
processes = 1   # 表示uwsgi启动的进程
threads = 2     # 线程数
chdir = /home/liuquan/beforeclass/mall_YX   # 项目根目录路径
wsgi-file= mall_YX/wsgi.py  # wsgi文件的相对路径
# http = 公网IP  是一个http请求
# http-socket = 公私网都可以使用
socket = 172.29.175.63:8000     # 通过socket套接字进行数据传输，只能用私网IP
logto = /home/liuquan/beforeclass/mall_YX/logs/error.log    # 日志文件的保存路径
chmod-socket = 660
vacuum = true
max-requests = 1000     # 最大请求
# 如果报错：数据传输超出了最大的限制，将buffer-size参数调大即可
buffer-size = 4096    # 缓存数据的最大限制，单位是byte
